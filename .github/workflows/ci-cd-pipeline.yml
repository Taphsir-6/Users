name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Upload JAR as artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: target/*.jar

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: app-jar
          path: target

      - name: Run tests
        run: mvn test

      - name: Build Docker image (for test)
        run: docker build -t utilisateurs-api .

      - name: Run Docker container (simulation)
        run: |
          docker run -d -p 8080:8080 --name test-api utilisateurs-api
          sleep 10
          curl --fail http://localhost:8080/api/vacataires
          docker stop test-api
          docker rm test-api

  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: app-jar
          path: target

      - name: Build Docker image
        run: docker build -t utilisateurs-api .

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Tag Docker image
        run: docker tag utilisateurs-api ${{ secrets.DOCKER_USERNAME }}/utilisateurs-api:latest

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/utilisateurs-api:latest

      - name: Deploy to server via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker pull omardiop10/utilisateurs-api:latest
            docker stop test-api || true
            docker rm test-api || true
            docker run -d -p 8080:8080 --name test-api omardiop10/utilisateurs-api:latest